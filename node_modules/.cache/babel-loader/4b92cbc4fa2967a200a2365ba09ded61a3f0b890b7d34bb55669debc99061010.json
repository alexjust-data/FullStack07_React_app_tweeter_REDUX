{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Desktop/REACT_BOOTCAMP/twitter_react/FullStack_React_app_tweeter/src/pages/auth/LoginPage/LoginPage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createPortal } from 'react-dom';\nimport { useEffect, useState, useRef } from 'react';\nimport Button from '../../../components/shared/Button';\nimport FormField from '../../../components/shared/FormField';\nimport { login } from '../service';\nimport { useAuth } from '../context';\nimport './LoginPage.css';\nimport { useLocation, useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const {\n    onLogin\n  } = useAuth();\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: ''\n  });\n  const [error, setError] = useState(null);\n  const [isFetching, setIsFeching] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      var _location$state, _location$state$from;\n      setIsFeching(true);\n      await login(credentials);\n      setIsFeching(false);\n      onLogin();\n      const to = (location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || '/';\n      navigate(to);\n    } catch (error) {\n      setIsFeching(false);\n      setError(error);\n    }\n  };\n  const handleChange = event => {\n    setCredentials(currentCredentials => ({\n      ...currentCredentials,\n      [event.target.name]: event.target.value\n    }));\n  };\n  const resetError = () => {\n    setError(null);\n  };\n  const {\n    username,\n    password\n  } = credentials;\n  const buttonDisabled = !(username && password) || isFetching;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"loginPage-title\",\n      children: \"Log in to Twitter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormField, {\n        type: \"text\",\n        name: \"username\",\n        label: \"phone, email or username\",\n        className: \"loginForm-field\",\n        onChange: handleChange,\n        value: credentials.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormField, {\n        type: \"password\",\n        name: \"password\",\n        label: \"password\",\n        className: \"loginForm-field\",\n        onChange: handleChange,\n        value: credentials.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        $variant: \"primary\",\n        disabled: buttonDisabled,\n        className: \"loginForm-submit\",\n        children: isFetching ? 'Connecting...' : 'Log in'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginPage-error\",\n        onClick: resetError,\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"3+TrqB8Mh/myNttyvXN9FpAlWgI=\", false, function () {\n  return [useAuth, useLocation, useNavigate];\n});\n_c = LoginPage;\nfunction LoginPagePortal() {\n  _s2();\n  const portalContainer = useRef(null);\n  useEffect(() => {\n    // Create a container div to hold our portal content\n    portalContainer.current = document.createElement('div');\n\n    // Attempt to open a new window\n    const externalWindow = window.open('', '', 'width=600,height=400,left=200,top=200');\n\n    // Check if the window was successfully opened\n    if (externalWindow && externalWindow.document) {\n      externalWindow.document.body.appendChild(portalContainer.current);\n    } else {\n      // Handle the case where the window could not be opened\n      console.error('Unable to open window');\n    }\n\n    // Cleanup function to close the window when the component unmounts\n    return () => {\n      if (externalWindow) {\n        externalWindow.close();\n      }\n    };\n  }, []);\n\n  // The portal should only be created if the externalWindow and portalContainer are available\n  return portalContainer.current && /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 50\n  }, this), portalContainer.current);\n}\n_s2(LoginPagePortal, \"yx8OKbmeKVDCJ6F5aS0MtGo+XG0=\");\n_c2 = LoginPagePortal;\nexport default LoginPagePortal;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoginPage\");\n$RefreshReg$(_c2, \"LoginPagePortal\");","map":{"version":3,"names":["createPortal","useEffect","useState","useRef","Button","FormField","login","useAuth","useLocation","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","onLogin","credentials","setCredentials","username","password","error","setError","isFetching","setIsFeching","location","navigate","handleSubmit","event","preventDefault","_location$state","_location$state$from","to","state","from","pathname","handleChange","currentCredentials","target","name","value","resetError","buttonDisabled","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","label","onChange","$variant","disabled","onClick","message","_c","LoginPagePortal","_s2","portalContainer","current","document","createElement","externalWindow","window","open","body","appendChild","console","close","_c2","$RefreshReg$"],"sources":["/Users/alex/Desktop/REACT_BOOTCAMP/twitter_react/FullStack_React_app_tweeter/src/pages/auth/LoginPage/LoginPage.js"],"sourcesContent":["import { createPortal } from 'react-dom';\nimport { useEffect, useState, useRef } from 'react';\nimport Button from '../../../components/shared/Button';\nimport FormField from '../../../components/shared/FormField';\nimport { login } from '../service';\nimport { useAuth } from '../context';\n\nimport './LoginPage.css';\nimport { useLocation, useNavigate } from 'react-router';\n\nfunction LoginPage() {\n  const { onLogin } = useAuth();\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: '',\n  });\n  const [error, setError] = useState(null);\n  const [isFetching, setIsFeching] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      setIsFeching(true);\n      await login(credentials);\n      setIsFeching(false);\n      onLogin();\n      const to = location?.state?.from?.pathname || '/';\n      navigate(to);\n    } catch (error) {\n      setIsFeching(false);\n      setError(error);\n    }\n  };\n\n  const handleChange = event => {\n    setCredentials(currentCredentials => ({\n      ...currentCredentials,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  const resetError = () => {\n    setError(null);\n  };\n\n  const { username, password } = credentials;\n  const buttonDisabled = !(username && password) || isFetching;\n\n  return (\n    <div className=\"loginPage\">\n      <h1 className=\"loginPage-title\">Log in to Twitter</h1>\n      <form onSubmit={handleSubmit}>\n        <FormField\n          type=\"text\"\n          name=\"username\"\n          label=\"phone, email or username\"\n          className=\"loginForm-field\"\n          onChange={handleChange}\n          value={credentials.username}\n        />\n        <FormField\n          type=\"password\"\n          name=\"password\"\n          label=\"password\"\n          className=\"loginForm-field\"\n          onChange={handleChange}\n          value={credentials.password}\n        />\n        <Button\n          type=\"submit\"\n          $variant=\"primary\"\n          disabled={buttonDisabled}\n          className=\"loginForm-submit\"\n        >\n          {isFetching ? 'Connecting...' : 'Log in'}\n        </Button>\n        {error && (\n          <div className=\"loginPage-error\" onClick={resetError}>\n            {error.message}\n          </div>\n        )}\n      </form>\n    </div>\n  );\n}\n\nfunction LoginPagePortal() {\n  const portalContainer = useRef(null);\n\n  useEffect(() => {\n    // Create a container div to hold our portal content\n    portalContainer.current = document.createElement('div');\n\n    // Attempt to open a new window\n    const externalWindow = window.open('', '', 'width=600,height=400,left=200,top=200');\n\n    // Check if the window was successfully opened\n    if (externalWindow && externalWindow.document) {\n      externalWindow.document.body.appendChild(portalContainer.current);\n    } else {\n      // Handle the case where the window could not be opened\n      console.error('Unable to open window');\n    }\n\n    // Cleanup function to close the window when the component unmounts\n    return () => {\n      if (externalWindow) {\n        externalWindow.close();\n      }\n    };\n  }, []);\n\n  // The portal should only be created if the externalWindow and portalContainer are available\n  return portalContainer.current && createPortal(<LoginPage />, portalContainer.current);\n}\n\n\nexport default LoginPagePortal;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}