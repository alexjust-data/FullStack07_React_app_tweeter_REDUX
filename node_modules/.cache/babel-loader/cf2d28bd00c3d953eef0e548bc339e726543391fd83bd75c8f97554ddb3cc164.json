{"ast":null,"code":"// import { createStore } from 'redux';\n\nfunction createStore(reducer) {\n  let state;\n  let listeners = [];\n  function getState() {\n    return state;\n  }\n  function dispatch(action) {\n    state = reducer(state, action);\n    listeners.forEach(l => l());\n  }\n  function subscribe(listener) {\n    listeners.push(listener);\n    return function () {\n      listeners = listeners.filter(l => !listener);\n    };\n  }\n  dispatch({\n    type: 'initialization'\n  });\n  return {\n    getState,\n    subscribe,\n    dispatch\n  };\n}\nconst reducer = (state = 0, action) => {\n  // implement state logic\n  switch (action.type) {\n    case 'increment':\n      return state + 1;\n    case 'decrement':\n      return state - 1;\n    default:\n      return state;\n  }\n};\nconst store = createStore(reducer);\nconst callback = () => console.log('state', store.getState());\nconst unsubscribe = store.subscribe(callback);\ncallback();\nstore.dispatch({\n  type: 'increment'\n});\nunsubscribe();\nstore.dispatch({\n  type: 'decrement'\n});\nconsole.log(store.getState());","map":{"version":3,"names":["createStore","reducer","state","listeners","getState","dispatch","action","forEach","l","subscribe","listener","push","filter","type","store","callback","console","log","unsubscribe"],"sources":["/Users/alex/Desktop/KEEPKODING/REACT_AVANZADO/GIT/FullStack07_React_app_tweeter_REDUX_/src/store/index.js"],"sourcesContent":["// import { createStore } from 'redux';\n\nfunction createStore(reducer) {\n  let state;\n  let listeners = [];\n\n  function getState() {\n    return state;\n  }\n\n  function dispatch(action) {\n    state = reducer(state, action);\n    listeners.forEach(l => l());\n  }\n\n  function subscribe(listener) {\n    listeners.push(listener);\n\n    return function () {\n      listeners = listeners.filter(l => !listener);\n    };\n  }\n\n  dispatch({ type: 'initialization' });\n\n  return {\n    getState,\n    subscribe,\n    dispatch,\n  };\n}\n\nconst reducer = (state = 0, action) => {\n  // implement state logic\n  switch (action.type) {\n    case 'increment':\n      return state + 1;\n    case 'decrement':\n      return state - 1;\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\n\nconst callback = () => console.log('state', store.getState());\nconst unsubscribe = store.subscribe(callback);\ncallback();\n\nstore.dispatch({ type: 'increment' });\n\nunsubscribe();\nstore.dispatch({ type: 'decrement' });\nconsole.log(store.getState());\n"],"mappings":"AAAA;;AAEA,SAASA,WAAWA,CAACC,OAAO,EAAE;EAC5B,IAAIC,KAAK;EACT,IAAIC,SAAS,GAAG,EAAE;EAElB,SAASC,QAAQA,CAAA,EAAG;IAClB,OAAOF,KAAK;EACd;EAEA,SAASG,QAAQA,CAACC,MAAM,EAAE;IACxBJ,KAAK,GAAGD,OAAO,CAACC,KAAK,EAAEI,MAAM,CAAC;IAC9BH,SAAS,CAACI,OAAO,CAACC,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC;EAC7B;EAEA,SAASC,SAASA,CAACC,QAAQ,EAAE;IAC3BP,SAAS,CAACQ,IAAI,CAACD,QAAQ,CAAC;IAExB,OAAO,YAAY;MACjBP,SAAS,GAAGA,SAAS,CAACS,MAAM,CAACJ,CAAC,IAAI,CAACE,QAAQ,CAAC;IAC9C,CAAC;EACH;EAEAL,QAAQ,CAAC;IAAEQ,IAAI,EAAE;EAAiB,CAAC,CAAC;EAEpC,OAAO;IACLT,QAAQ;IACRK,SAAS;IACTJ;EACF,CAAC;AACH;AAEA,MAAMJ,OAAO,GAAGA,CAACC,KAAK,GAAG,CAAC,EAAEI,MAAM,KAAK;EACrC;EACA,QAAQA,MAAM,CAACO,IAAI;IACjB,KAAK,WAAW;MACd,OAAOX,KAAK,GAAG,CAAC;IAClB,KAAK,WAAW;MACd,OAAOA,KAAK,GAAG,CAAC;IAClB;MACE,OAAOA,KAAK;EAChB;AACF,CAAC;AAED,MAAMY,KAAK,GAAGd,WAAW,CAACC,OAAO,CAAC;AAElC,MAAMc,QAAQ,GAAGA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEH,KAAK,CAACV,QAAQ,CAAC,CAAC,CAAC;AAC7D,MAAMc,WAAW,GAAGJ,KAAK,CAACL,SAAS,CAACM,QAAQ,CAAC;AAC7CA,QAAQ,CAAC,CAAC;AAEVD,KAAK,CAACT,QAAQ,CAAC;EAAEQ,IAAI,EAAE;AAAY,CAAC,CAAC;AAErCK,WAAW,CAAC,CAAC;AACbJ,KAAK,CAACT,QAAQ,CAAC;EAAEQ,IAAI,EAAE;AAAY,CAAC,CAAC;AACrCG,OAAO,CAACC,GAAG,CAACH,KAAK,CAACV,QAAQ,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}