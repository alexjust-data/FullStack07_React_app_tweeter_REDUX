{"ast":null,"code":"import { login } from '../pages/auth/service';\nimport { AUTH_LOGIN_FAILURE, AUTH_LOGIN_REQUEST, AUTH_LOGIN_SUCCESS, AUTH_LOGOUT, TWEETS_LOADED, UI_RESET_ERROR } from './types';\nexport const authLoginRequest = () => ({\n  type: AUTH_LOGIN_REQUEST\n});\nexport const authLoginSuccess = () => ({\n  type: AUTH_LOGIN_SUCCESS\n});\nexport const authLoginFailure = error => ({\n  type: AUTH_LOGIN_FAILURE,\n  error: true,\n  payload: error\n});\nexport function authLogin(credentials) {\n  return async function (dispatch, getState) {\n    try {\n      dispatch(authLoginRequest());\n      await login(credentials);\n      dispatch(authLoginSuccess());\n    } catch (error) {\n      dispatch(authLoginFailure(error));\n      throw error;\n    }\n  };\n}\nexport const authLogout = () => ({\n  type: AUTH_LOGOUT\n});\nexport const tweetsLoaded = tweets => ({\n  type: TWEETS_LOADED,\n  payload: tweets\n});\nexport const uiResetError = () => ({\n  type: UI_RESET_ERROR\n});","map":{"version":3,"names":["login","AUTH_LOGIN_FAILURE","AUTH_LOGIN_REQUEST","AUTH_LOGIN_SUCCESS","AUTH_LOGOUT","TWEETS_LOADED","UI_RESET_ERROR","authLoginRequest","type","authLoginSuccess","authLoginFailure","error","payload","authLogin","credentials","dispatch","getState","authLogout","tweetsLoaded","tweets","uiResetError"],"sources":["/Users/alex/Desktop/KEEPKODING/REACT_AVANZADO/GIT/FullStack07_React_app_tweeter_REDUX_/src/store/actions.js"],"sourcesContent":["import { login } from '../pages/auth/service';\nimport {\n  AUTH_LOGIN_FAILURE,\n  AUTH_LOGIN_REQUEST,\n  AUTH_LOGIN_SUCCESS,\n  AUTH_LOGOUT,\n  TWEETS_LOADED,\n  UI_RESET_ERROR,\n} from './types';\n\nexport const authLoginRequest = () => ({\n  type: AUTH_LOGIN_REQUEST,\n});\n\nexport const authLoginSuccess = () => ({\n  type: AUTH_LOGIN_SUCCESS,\n});\n\nexport const authLoginFailure = error => ({\n  type: AUTH_LOGIN_FAILURE,\n  error: true,\n  payload: error,\n});\n\nexport function authLogin(credentials) {\n  return async function (dispatch, getState) {\n    try {\n      dispatch(authLoginRequest());\n      await login(credentials);\n      dispatch(authLoginSuccess());\n    } catch (error) {\n      dispatch(authLoginFailure(error));\n      throw error;\n    }\n  };\n}\n\nexport const authLogout = () => ({\n  type: AUTH_LOGOUT,\n});\n\nexport const tweetsLoaded = tweets => ({\n  type: TWEETS_LOADED,\n  payload: tweets,\n});\n\nexport const uiResetError = () => ({ type: UI_RESET_ERROR });\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,uBAAuB;AAC7C,SACEC,kBAAkB,EAClBC,kBAAkB,EAClBC,kBAAkB,EAClBC,WAAW,EACXC,aAAa,EACbC,cAAc,QACT,SAAS;AAEhB,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,MAAO;EACrCC,IAAI,EAAEN;AACR,CAAC,CAAC;AAEF,OAAO,MAAMO,gBAAgB,GAAGA,CAAA,MAAO;EACrCD,IAAI,EAAEL;AACR,CAAC,CAAC;AAEF,OAAO,MAAMO,gBAAgB,GAAGC,KAAK,KAAK;EACxCH,IAAI,EAAEP,kBAAkB;EACxBU,KAAK,EAAE,IAAI;EACXC,OAAO,EAAED;AACX,CAAC,CAAC;AAEF,OAAO,SAASE,SAASA,CAACC,WAAW,EAAE;EACrC,OAAO,gBAAgBC,QAAQ,EAAEC,QAAQ,EAAE;IACzC,IAAI;MACFD,QAAQ,CAACR,gBAAgB,CAAC,CAAC,CAAC;MAC5B,MAAMP,KAAK,CAACc,WAAW,CAAC;MACxBC,QAAQ,CAACN,gBAAgB,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdI,QAAQ,CAACL,gBAAgB,CAACC,KAAK,CAAC,CAAC;MACjC,MAAMA,KAAK;IACb;EACF,CAAC;AACH;AAEA,OAAO,MAAMM,UAAU,GAAGA,CAAA,MAAO;EAC/BT,IAAI,EAAEJ;AACR,CAAC,CAAC;AAEF,OAAO,MAAMc,YAAY,GAAGC,MAAM,KAAK;EACrCX,IAAI,EAAEH,aAAa;EACnBO,OAAO,EAAEO;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGA,CAAA,MAAO;EAAEZ,IAAI,EAAEF;AAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}