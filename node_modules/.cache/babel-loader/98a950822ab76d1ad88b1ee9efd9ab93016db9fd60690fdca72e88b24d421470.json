{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Desktop/REACT_BOOTCAMP/twitter_react/FullStack_React_app_tweeter/src/pages/tweets/TweetsPage/TweetsPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getLatestTweets } from '../service';\nimport Button from '../../../components/shared/Button';\nimport Content from '../../../components/layout/Content';\nimport Tweet from '../components/Tweet';\nimport './TweetsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmptyList = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"tweetsPage-empty\",\n  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Be the first one!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Button, {\n    $variant: \"primary\",\n    children: \"Create tweet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this);\n_c = EmptyList;\nfunction TweetsPage() {\n  _s();\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    // const fetchTweets = async () => {\n    //   const tweets = await getLatestTweets();\n    //   setTweets(tweets);\n    // };\n    // fetchTweets();\n    getLatestTweets().then(tweets => setTweets(tweets));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Content, {\n    title: \"What's going on...\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweetsPage\",\n      children: tweets.length ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tweets.map(({\n          id,\n          ...tweet\n        }) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `${id}`,\n            children: /*#__PURE__*/_jsxDEV(Tweet, {\n              ...tweet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(EmptyList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(TweetsPage, \"tlPhWtKxaAnAviYMgoNvFaAwXFo=\");\n_c2 = TweetsPage;\nexport default TweetsPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"EmptyList\");\n$RefreshReg$(_c2, \"TweetsPage\");","map":{"version":3,"names":["useEffect","useState","Link","getLatestTweets","Button","Content","Tweet","jsxDEV","_jsxDEV","EmptyList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","$variant","_c","TweetsPage","_s","tweets","setTweets","then","title","length","map","id","tweet","to","_c2","$RefreshReg$"],"sources":["/Users/alex/Desktop/REACT_BOOTCAMP/twitter_react/FullStack_React_app_tweeter/src/pages/tweets/TweetsPage/TweetsPage.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getLatestTweets } from '../service';\nimport Button from '../../../components/shared/Button';\nimport Content from '../../../components/layout/Content';\nimport Tweet from '../components/Tweet';\n\nimport './TweetsPage.css';\n\nconst EmptyList = () => (\n  <div className=\"tweetsPage-empty\">\n    <p>Be the first one!</p>\n    <Button $variant=\"primary\">Create tweet</Button>\n  </div>\n);\n\nfunction TweetsPage() {\n  const [tweets, setTweets] = useState([]);\n\n  useEffect(() => {\n    // const fetchTweets = async () => {\n    //   const tweets = await getLatestTweets();\n    //   setTweets(tweets);\n    // };\n    // fetchTweets();\n    getLatestTweets().then(tweets => setTweets(tweets));\n  }, []);\n\n  return (\n    <Content title=\"What's going on...\">\n      <div className=\"tweetsPage\">\n        {tweets.length ? (\n          <ul>\n            {tweets.map(({ id, ...tweet }) => (\n              <li key={id}>\n                <Link to={`${id}`}>\n                  <Tweet {...tweet} />\n                </Link>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <EmptyList />\n        )}\n      </div>\n    </Content>\n  );\n}\n\nexport default TweetsPage;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,eAAe,QAAQ,YAAY;AAC5C,OAAOC,MAAM,MAAM,mCAAmC;AACtD,OAAOC,OAAO,MAAM,oCAAoC;AACxD,OAAOC,KAAK,MAAM,qBAAqB;AAEvC,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,kBAChBD,OAAA;EAAKE,SAAS,EAAC,kBAAkB;EAAAC,QAAA,gBAC/BH,OAAA;IAAAG,QAAA,EAAG;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC,eACxBP,OAAA,CAACJ,MAAM;IAACY,QAAQ,EAAC,SAAS;IAAAL,QAAA,EAAC;EAAY;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAC7C,CACN;AAACE,EAAA,GALIR,SAAS;AAOf,SAASS,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;IACA;IACAG,eAAe,CAAC,CAAC,CAACmB,IAAI,CAACF,MAAM,IAAIC,SAAS,CAACD,MAAM,CAAC,CAAC;EACrD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA,CAACH,OAAO;IAACkB,KAAK,EAAC,oBAAoB;IAAAZ,QAAA,eACjCH,OAAA;MAAKE,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBS,MAAM,CAACI,MAAM,gBACZhB,OAAA;QAAAG,QAAA,EACGS,MAAM,CAACK,GAAG,CAAC,CAAC;UAAEC,EAAE;UAAE,GAAGC;QAAM,CAAC,kBAC3BnB,OAAA;UAAAG,QAAA,eACEH,OAAA,CAACN,IAAI;YAAC0B,EAAE,EAAG,GAAEF,EAAG,EAAE;YAAAf,QAAA,eAChBH,OAAA,CAACF,KAAK;cAAA,GAAKqB;YAAK;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB;QAAC,GAHAW,EAAE;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIP,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,gBAELP,OAAA,CAACC,SAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACb;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd;AAACI,EAAA,CA/BQD,UAAU;AAAAW,GAAA,GAAVX,UAAU;AAiCnB,eAAeA,UAAU;AAAC,IAAAD,EAAA,EAAAY,GAAA;AAAAC,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}