{"ast":null,"code":"import client,{removeAuthorizationHeader,setAuthorizationHeader}from'../../api/client';import storage from'../../utils/storage';export const login=credentials=>{return client.post('/auth/login',credentials).then(_ref=>{let{accessToken}=_ref;setAuthorizationHeader(accessToken);storage.set('auth',accessToken);});};export const logout=()=>{return Promise.resolve().then(()=>{removeAuthorizationHeader();storage.remove('auth');});};","map":{"version":3,"names":["client","removeAuthorizationHeader","setAuthorizationHeader","storage","login","credentials","post","then","_ref","accessToken","set","logout","Promise","resolve","remove"],"sources":["/Users/alex/Desktop/REACT_BOOTCAMP/twitter_react/FullStack_React_app_tweeter/src/pages/auth/service.js"],"sourcesContent":["import client, {\n  removeAuthorizationHeader,\n  setAuthorizationHeader,\n} from '../../api/client';\nimport storage from '../../utils/storage';\n\nexport const login = credentials => {\n  return client.post('/auth/login', credentials).then(({ accessToken }) => {\n    setAuthorizationHeader(accessToken);\n    storage.set('auth', accessToken);\n  });\n};\n\nexport const logout = () => {\n  return Promise.resolve().then(() => {\n    removeAuthorizationHeader();\n    storage.remove('auth');\n  });\n};\n"],"mappings":"AAAA,MAAO,CAAAA,MAAM,EACXC,yBAAyB,CACzBC,sBAAsB,KACjB,kBAAkB,CACzB,MAAO,CAAAC,OAAO,KAAM,qBAAqB,CAEzC,MAAO,MAAM,CAAAC,KAAK,CAAGC,WAAW,EAAI,CAClC,MAAO,CAAAL,MAAM,CAACM,IAAI,CAAC,aAAa,CAAED,WAAW,CAAC,CAACE,IAAI,CAACC,IAAA,EAAqB,IAApB,CAAEC,WAAY,CAAC,CAAAD,IAAA,CAClEN,sBAAsB,CAACO,WAAW,CAAC,CACnCN,OAAO,CAACO,GAAG,CAAC,MAAM,CAAED,WAAW,CAAC,CAClC,CAAC,CAAC,CACJ,CAAC,CAED,MAAO,MAAM,CAAAE,MAAM,CAAGA,CAAA,GAAM,CAC1B,MAAO,CAAAC,OAAO,CAACC,OAAO,CAAC,CAAC,CAACN,IAAI,CAAC,IAAM,CAClCN,yBAAyB,CAAC,CAAC,CAC3BE,OAAO,CAACW,MAAM,CAAC,MAAM,CAAC,CACxB,CAAC,CAAC,CACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}